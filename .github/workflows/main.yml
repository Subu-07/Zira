name: CI/CD Pipeline

on:
  push:
    branches:
      - main # Your primary branch
      - develop # Your development branch
    tags:
      - "v*.*.*" # Trigger for semantic version tags like v0.1.0
  pull_request:
    branches:
      - main
      - develop

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # Changed PHP version to 8.3 as it's typically more stable for current tools
        # If you specifically need 8.4 (which is still in alpha/beta), keep it,
        # but 8.3 is a safer bet for CI stability right now.
        php-version: ['8.3']

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP ${{ matrix.php-version }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          # All required extensions for PHPUnit and your other tools
          extensions: gd, intl, pdo_mysql, zip, openssl, curl, dom, json, libxml, mbstring, tokenizer, xml, xmlwriter
          ini-values: post_max_size=256M, upload_max_filesize=256M
          coverage: xdebug # Use xdebug or pcov for code coverage reporting

      - name: Validate Composer files
        run: composer validate --strict

      - name: Cache Composer dependencies
        id: composer-cache
        uses: actions/cache@v4
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ matrix.php-version }}-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
             ${{ runner.os }}-php-${{ matrix.php-version }}-

      - name: Composer Install
        run: composer install --prefer-dist --no-progress --no-interaction

      # This step now includes debugging commands to help diagnose the persistent "Test directory not found" error
      - name: Run PHPUnit with Debug Info
        run: |
          echo "--- Debugging PHPUnit Environment ---"
          echo "Current working directory (pwd):"
          pwd
          echo "Contents of current directory (ls -la):"
          ls -la
          echo "Contents of 'tests' directory (ls -la tests/):"
          ls -la tests/
          echo "Contents of 'tests/Integration' directory (ls -la tests/Integration/):"
          ls -la tests/Integration/ # Added this for more specific check
          echo "Contents of 'vendor/bin' directory (ls -la vendor/bin/):"
          ls -la vendor/bin/
          echo "--- Attempting to run PHPUnit ---"
          vendor/bin/phpunit --coverage-clover coverage.xml
        working-directory: ./ # This is crucial and correctly placed

      - name: Run PHPStan
        run: vendor/bin/phpstan analyse --memory-limit=1G --configuration=phpstan.neon.dist
        working-directory: ./

      - name: Run Psalm
        run: vendor/bin/psalm --show-info=true --config=psalm.xml
        working-directory: ./

      - name: Run PHP-CS-Fixer (Dry Run)
        run: vendor/bin/php-cs-fixer fix --dry-run --diff --verbose
        working-directory: ./

  publish-to-packagist:
    if: success() && startsWith(github.ref, 'refs/tags/v')
    needs: build-and-test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Publish to Packagist (Automated via GitHub Hook)
        run: |
          echo "Tag pushed: ${{ github.ref }}"
          echo "Packagist will automatically pull updates if linked via GitHub hooks."
          echo "Ensure your repository is linked on Packagist.org and 'Update on push' is enabled."